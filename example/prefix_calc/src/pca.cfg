/codeprovides /{
	extern int yyparse(void* state);
/}

/code /{
	#include <math.h>
	#include <stdio.h>
	#include "pca_lex.h"
/}

/token <double> NUM 257
/token ADD 258
/token SUB 259
/token MUL 260
/token DIV 261
/token POW 262
/token NEG 263
/token NL 264

/nterm input
/nterm line
/nterm <double> exp

/start input

/parseparam <void*> state
/lexparam <void*> state

%%

input: /empty
  | line input
  ;

line: NL
  | exp NL /{printf("\t%.10g\n", $1);/}
  ;

exp: NUM /{$0 = $1;/}
  | ADD exp exp /{$0 = $2 + $3;/}
  | SUB exp exp /{$0 = $2 - $3;/}
  | MUL exp exp /{$0 = $2 * $3;/}
  | DIV exp exp /{$0 = $2 / $3;/}
  | POW exp exp /{$0 = pow($2,$3);/}
  | NEG exp /{$0 = -$2;/}
  ;

%%

